[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Sagatro mechanics
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if v.yes_pool_flag and not G.GAME.pool_flags[v.yes_pool_flag] then add = nil end"
position = "after"
payload = '''

if Sagatro.config.DisableOtherJokers then
    if v.set == 'Joker' then
        -- Sagatro jokers only
        if not v.saga_group then add = nil end
        
        -- Events that would alter joker pool
        -- For some ducking reason this method has unexpected behaviors with modded rarities
        for story, events in pairs(G.GAME.saga_event) do    
            for event, happening in pairs(events) do
                if happening then
                    if G.GAME.saga_spawn_table[story][event]
                    and type(G.GAME.saga_spawn_table[story][event]) == "table"
                    and #G.GAME.saga_spawn_table[story][event] > 0 then
                        add = nil
                        for _, key in pairs(G.GAME.saga_spawn_table[story][event]) do
                            if not (G.GAME.used_jokers[v.key] and not pool_opts.allow_duplicates and not next(find_joker("Showman")))
                            and v.unlocked ~= false and v.key == key then
                                add = true
                            end
                        end
                    end
                end
            end
        end
    end
else
    if v.set == 'Joker' and next(SMODS.find_card("j_sgt_mad_hatter")) then
        add = nil
        for _, key in pairs(G.GAME.saga_spawn_table.alice_in_wonderland.mad_hatter) do
            if not (G.GAME.used_jokers[v.key] and not pool_opts.allow_duplicates and not next(find_joker("Showman")))
            and v.unlocked ~= false and v.key == key then
                add = true
            end
        end
    end
end

'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''elseif _type == 'Joker' then _pool[#_pool + 1] = "j_joker"'''
position = "at"
payload = '''
elseif _type == 'Joker' then
    if Sagatro.config.DisableOtherJokers then
        if G.GAME.saga_event.alice_in_wonderland.cry_into_flood then
            _pool[#_pool + 1] = "j_splash"
        elseif G.GAME.saga_event.alice_in_wonderland.goodbye_frog then
            _pool[#_pool + 1] = "j_sgt_cheshire_cat"
        elseif G.GAME.saga_event.alice_in_wonderland.mad_hatter then
            _pool[#_pool + 1] = "j_sgt_tea"
        else
            _pool[#_pool + 1] = "j_sgt_white_rabbit"
        end
    elseif next(SMODS.find_card("j_sgt_mad_hatter")) then
        _pool[#_pool + 1] = "j_sgt_tea"
    -- This redundancy is to allow other mods to find the same pattern
    elseif _type == 'Joker' then _pool[#_pool + 1] = "j_joker"
    end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''else _pool[#_pool + 1] = "j_joker"'''
position = "at"
payload = '''
else
    if Sagatro.config.DisableOtherJokers then
        if G.GAME.saga_event.alice_in_wonderland.cry_into_flood then
            _pool[#_pool + 1] = "j_splash"
        elseif G.GAME.saga_event.alice_in_wonderland.goodbye_frog then
            _pool[#_pool + 1] = "j_sgt_cheshire_cat"
        elseif G.GAME.saga_event.alice_in_wonderland.mad_hatter then
            _pool[#_pool + 1] = "j_sgt_tea"
        else
            _pool[#_pool + 1] = "j_sgt_white_rabbit"
        end
    elseif next(SMODS.find_card("j_sgt_mad_hatter", true)) then
        _pool[#_pool + 1] = "j_sgt_tea"
    else _pool[#_pool + 1] = "j_joker"
    end
'''
match_indent = true

# Emult
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "local extrafunc = nil"
position = "after"
payload = '''
if not (SMODS.Mods["Talisman"] or {}).can_load
and not (SMODS.Mods["Buffoonery"] or {}).can_load
and not (SMODS.Mods["Prism"] or {}).can_load then
	if eval_type == 'e_mult' then 
		sound = 'sgt_emult'
		amt = amt
		text = '^' .. amt .. " " .. localize("k_mult")
		colour = G.C.DARK_EDITION
		config.type = 'fade'
		config.scale = 0.7
	end
end
'''
match_indent = true

# The Cook patches (stolen from Bunco's Vandalism)
[[patches]]
[patches.pattern]
target = 'blind.lua'
pattern = '''if self.name == 'The Wheel' and pseudorandom(pseudoseed('wheel')) < G.GAME.probabilities.normal/7 then'''
position = 'before'
match_indent = true
payload = '''

if G.jokers then
    for _, v in ipairs(G.jokers.cards) do
        if v.config.center_key == 'j_sgt_the_cook' and not v.debuff then
            if (pseudorandom('thecook'..G.SEED) < G.GAME.probabilities.normal/v.ability.extra.odds) and (G.STATE == G.STATES.SELECTING_HAND or G.STATE == G.STATES.DRAW_TO_HAND) then
                SMODS.calculate_context({sgt_stay_flipped = true})
                return true
            end
        end
    end
end

'''

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = '''--check the hand first'''
position = 'after'
match_indent = true
payload = '''

if G.jokers then
    for _, v in ipairs(G.jokers.cards) do
        if v.config.center.key == 'j_sgt_the_cook' and not v.debuff then
            SMODS.calculate_context({sgt_play_cards = true})
        end
    end
end

'''